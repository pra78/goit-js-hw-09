{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QAsBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CA7BbL,EAAKa,iBAAiB,UAEtB,SAA+BC,GAC7BA,EAAMC,iBAEN,IAAIX,EAAW,EACXC,EAAQW,OAAOhB,EAAKK,MAAMY,OAC9B,MAAMC,EAAOF,OAAOhB,EAAKkB,KAAKD,OAC9B,IAAIE,EAASH,OAAOhB,EAAKmB,OAAOF,OAEhC,KAAOE,EAAS,GACdf,GAAY,EACZD,EAAcC,EAAUC,GACrBe,MAAKC,GAAUvB,EAAAwB,OAAOC,QAAQF,KAC9BG,OAAMC,GAAS3B,EAAAwB,OAAOI,QAAQD,KACjCpB,GAASa,EACTC,GAAU,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', onSubmitButtonPressed);\n\nfunction onSubmitButtonPressed(event) {\n  event.preventDefault();\n  \n  let position = 0;\n  let delay = Number(form.delay.value);\n  const step = Number(form.step.value);\n  let amount = Number(form.amount.value);\n\n  while (amount > 0) {\n    position += 1;\n    createPromise(position, delay)\n      .then(result => Notify.success(result))\n      .catch(error => Notify.failure(error));\n    delay += step;\n    amount -= 1;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","Number","value","step","amount","then","result","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.082c0e22.js.map"}